{"ast":null,"code":"const initialState = {\n  dogs: [],\n  allDogs: [],\n  //hago una copia del estado que siempre tenga todos los dogs para que me haga los filtros sobre todo y no sobre el estado que ya filtré\n  orderDogs: [],\n  //de esta manera no tengo que volver a cargar a todos los perros\n  weightDogs: [],\n  temperaments: [],\n  //declaro un nuevo estado temperament donde guardo los temperamentos\n  detail: [] //creo un nuevo estado detail para guardar la info del detalle del perro\n\n};\nexport function rootReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'GET_DOGS':\n      return { ...state,\n        dogs: action.payload,\n        allDogs: action.payload\n      };\n\n    case FILTER_RACE:\n      const allDogs = state.allDogs; //const statusFilter = action.payload === 'Name' ? allDogs : allDogs.filter(c => c.state === action.payload)\n\n      const statusFilter = allDogs.filter(c => c.state === action.payload);\n      return { ...state,\n        dogs: statusFilter\n      };\n\n    case FILTER_TEMPERAMENT:\n      const allTemperaments = state.temperament; //const statusTemp = action.payload === 'All' ? allTemperaments : allTemperaments.filter(c => c.state === action.payload)\n\n      const statusTemp = allTemperaments.filter(c => c.temperament === action.payload);\n      return { ...state,\n        temperaments: statusTemp\n      };\n\n    case FILTER_CREATED:\n      const allDogis = state.allDogs; //const statusTemp = action.payload === 'All' ? allTemperaments : allTemperaments.filter(c => c.state === action.payload)\n\n      const createdFilter = action.payload === 'created' ? allDogis.filter(c => c.createdInDb) : allDogis.filter(c => !c.createdInDb);\n      return { ...state,\n        dogs: action.payload === 'All' ? state.allDogs : createdFilter\n      };\n\n    default:\n      return state;\n  }\n}\nexport default rootReducer;","map":{"version":3,"sources":["C:/Users/andre/Desktop/DOG-PI/PI-Dogs/PI-Dogs-main/client/src/reducer/index.js"],"names":["initialState","dogs","allDogs","orderDogs","weightDogs","temperaments","detail","rootReducer","state","action","type","payload","FILTER_RACE","statusFilter","filter","c","FILTER_TEMPERAMENT","allTemperaments","temperament","statusTemp","FILTER_CREATED","allDogis","createdFilter","createdInDb"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,EADW;AAEjBC,EAAAA,OAAO,EAAE,EAFQ;AAEJ;AACbC,EAAAA,SAAS,EAAE,EAHM;AAGF;AACfC,EAAAA,UAAU,EAAE,EAJK;AAKjBC,EAAAA,YAAY,EAAE,EALG;AAKC;AAClBC,EAAAA,MAAM,EAAE,EANS,CAML;;AANK,CAArB;AAUA,OAAO,SAASC,WAAT,GAAmD;AAAA,MAA9BC,KAA8B,uEAAtBR,YAAsB;AAAA,MAARS,MAAQ;;AACtD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,UAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEHP,QAAAA,IAAI,EAAEQ,MAAM,CAACE,OAFV;AAGHT,QAAAA,OAAO,EAAEO,MAAM,CAACE;AAHb,OAAP;;AAKJ,SAAKC,WAAL;AACI,YAAMV,OAAO,GAAGM,KAAK,CAACN,OAAtB,CADJ,CAEI;;AACA,YAAMW,YAAY,GAAGX,OAAO,CAACY,MAAR,CAAeC,CAAC,IAAIA,CAAC,CAACP,KAAF,KAAYC,MAAM,CAACE,OAAvC,CAArB;AACA,aAAO,EACH,GAAGH,KADA;AAEHP,QAAAA,IAAI,EAAEY;AAFH,OAAP;;AAIJ,SAAKG,kBAAL;AACI,YAAMC,eAAe,GAAGT,KAAK,CAACU,WAA9B,CADJ,CAEI;;AACA,YAAMC,UAAU,GAAGF,eAAe,CAACH,MAAhB,CAAuBC,CAAC,IAAIA,CAAC,CAACG,WAAF,KAAkBT,MAAM,CAACE,OAArD,CAAnB;AACA,aAAO,EACH,GAAGH,KADA;AAEHH,QAAAA,YAAY,EAAEc;AAFX,OAAP;;AAKA,SAAKC,cAAL;AACI,YAAMC,QAAQ,GAAGb,KAAK,CAACN,OAAvB,CADJ,CAEI;;AACA,YAAMoB,aAAa,GAAGb,MAAM,CAACE,OAAP,KAAmB,SAAnB,GAA+BU,QAAQ,CAACP,MAAT,CAAgBC,CAAC,IAAIA,CAAC,CAACQ,WAAvB,CAA/B,GAAqEF,QAAQ,CAACP,MAAT,CAAgBC,CAAC,IAAI,CAACA,CAAC,CAACQ,WAAxB,CAA3F;AACA,aAAO,EACH,GAAGf,KADA;AAEHP,QAAAA,IAAI,EAAEQ,MAAM,CAACE,OAAP,KAAmB,KAAnB,GAA2BH,KAAK,CAACN,OAAjC,GAA2CoB;AAF9C,OAAP;;AAKR;AACI,aAAOd,KAAP;AAlCR;AAoCH;AACD,eAAeD,WAAf","sourcesContent":["const initialState = {\r\n    dogs: [],\r\n    allDogs: [], //hago una copia del estado que siempre tenga todos los dogs para que me haga los filtros sobre todo y no sobre el estado que ya filtré\r\n    orderDogs: [], //de esta manera no tengo que volver a cargar a todos los perros\r\n    weightDogs: [],\r\n    temperaments: [], //declaro un nuevo estado temperament donde guardo los temperamentos\r\n    detail: [], //creo un nuevo estado detail para guardar la info del detalle del perro\r\n  };\r\n\r\n\r\nexport function rootReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'GET_DOGS':\r\n            return {\r\n                ...state,\r\n                dogs: action.payload,\r\n                allDogs: action.payload,\r\n            }\r\n        case FILTER_RACE:\r\n            const allDogs = state.allDogs\r\n            //const statusFilter = action.payload === 'Name' ? allDogs : allDogs.filter(c => c.state === action.payload)\r\n            const statusFilter = allDogs.filter(c => c.state === action.payload)\r\n            return {\r\n                ...state,\r\n                dogs: statusFilter\r\n            }\r\n        case FILTER_TEMPERAMENT:\r\n            const allTemperaments = state.temperament\r\n            //const statusTemp = action.payload === 'All' ? allTemperaments : allTemperaments.filter(c => c.state === action.payload)\r\n            const statusTemp = allTemperaments.filter(c => c.temperament === action.payload)\r\n            return {\r\n                ...state,\r\n                temperaments: statusTemp\r\n            }\r\n\r\n            case FILTER_CREATED:\r\n                const allDogis = state.allDogs\r\n                //const statusTemp = action.payload === 'All' ? allTemperaments : allTemperaments.filter(c => c.state === action.payload)\r\n                const createdFilter = action.payload === 'created' ? allDogis.filter(c => c.createdInDb) : allDogis.filter(c => !c.createdInDb)\r\n                return {\r\n                    ...state,\r\n                    dogs: action.payload === 'All' ? state.allDogs : createdFilter\r\n                }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}