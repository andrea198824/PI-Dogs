{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andre\\\\Desktop\\\\DOG-PI\\\\PI-Dogs\\\\PI-Dogs-main\\\\client\\\\src\\\\components\\\\SearchBar.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { getDogsByName } from \"../actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SearchBar() {\n  _s();\n\n  const dispatch = useDispatch();\n  const [name, setName] = useState(''); //lo que está tipeando el usuario va a ser mi estado local name\n\n  function handleIn(e) {\n    e.preventDefault();\n    setName(e.target.value); //el value del input que ingresa por búsqueda va a setear el value del state\n\n    /* console.log(name) */\n  }\n\n  function handleSub(e) {\n    e.preventDefault();\n    dispatch(getDogsByName(name)); //acá lo que tipea el usuario le llega desde el estado local a la función que llama al back con ese name\n\n    setName(''); //para que cuando ya se hizo la busqueda no me siga mostrando el nombre ingresado, seteo el nombre en comillas\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      handleSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => handleInput(e),\n        value: name,\n        placeholder: \"Buscar...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Buscar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchBar, \"JZ026ztzghhswIdbIVxziEHmjuc=\", false, function () {\n  return [useDispatch];\n});\n\n_c = SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["C:/Users/andre/Desktop/DOG-PI/PI-Dogs/PI-Dogs-main/client/src/components/SearchBar.jsx"],"names":["React","useState","useDispatch","getDogsByName","SearchBar","dispatch","name","setName","handleIn","e","preventDefault","target","value","handleSub","handleSubmit","handleInput"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,aAAT,QAA8B,YAA9B;;AAGA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAClC,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC,CAFkC,CAEI;;AAEtC,WAASO,QAAT,CAAkBC,CAAlB,EAAqB;AACnBA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,OAAO,CAACE,CAAC,CAACE,MAAF,CAASC,KAAV,CAAP,CAFmB,CAEM;;AACzB;AACD;;AAED,WAASC,SAAT,CAAmBJ,CAAnB,EAAsB;AACpBA,IAAAA,CAAC,CAACC,cAAF;AACAL,IAAAA,QAAQ,CAACF,aAAa,CAACG,IAAD,CAAd,CAAR,CAFoB,CAEW;;AAC/BC,IAAAA,OAAO,CAAC,EAAD,CAAP,CAHoB,CAGP;AACd;;AAED,sBACE;AAAA,2BACE;AAAM,MAAA,YAAY,EAAIO,YAAtB;AAAA,8BACA;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,QAAQ,EAAGL,CAAD,IAAOM,WAAW,CAACN,CAAD,CAF9B;AAGE,QAAA,KAAK,EAAEH,IAHT;AAIE,QAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,cADA,eAOA;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,KAAK,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA,cAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GAjCuBF,S;UACLF,W;;;KADKE,S","sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getDogsByName } from \"../actions\";\r\n\r\n\r\nexport default function SearchBar() {\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState(''); //lo que está tipeando el usuario va a ser mi estado local name\r\n\r\n  function handleIn(e) {\r\n    e.preventDefault();\r\n    setName(e.target.value); //el value del input que ingresa por búsqueda va a setear el value del state\r\n    /* console.log(name) */\r\n  }\r\n\r\n  function handleSub(e) {\r\n    e.preventDefault();\r\n    dispatch(getDogsByName(name)); //acá lo que tipea el usuario le llega desde el estado local a la función que llama al back con ese name\r\n    setName(''); //para que cuando ya se hizo la busqueda no me siga mostrando el nombre ingresado, seteo el nombre en comillas\r\n  }\r\n\r\n  return (\r\n    <div /* className={styles.SearchBar} */>\r\n      <form handleSubmit = {handleSubmit}>\r\n      <input\r\n        type='text'\r\n        onChange={(e) => handleInput(e)}\r\n        value={name}\r\n        placeholder='Buscar...'\r\n        />\r\n      <input\r\n        \r\n        type='submit'\r\n        value=\"Buscar\"\r\n      />\r\n      </form>\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}