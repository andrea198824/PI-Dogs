{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andre\\\\Desktop\\\\DOG-PI\\\\PI-Dogs\\\\PI-Dogs-main\\\\client\\\\src\\\\components\\\\SearchBar.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { getDogByName } from \"../actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SearchBar() {\n  _s();\n\n  const dispatch = useDispatch();\n  const [name, setName] = useState(''); //lo que está tipeando el usuario va a ser mi estado local name\n\n  function handleIn(e) {\n    e.preventDefault();\n    setName(e.target.value); //el value del input que ingresa por búsqueda va a setear el value del state\n\n    /* console.log(name) */\n  }\n\n  function handleSub(e) {\n    e.preventDefault();\n    dispatch(getDogByName(name)); //acá lo que tipea el usuario le llega desde el estado local a la función que llama al back con ese name\n\n    setName(''); //para que cuando ya se hizo la busqueda no me siga mostrando el nombre ingresado, seteo el nombre en comillas\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: name,\n      placeholder: \"Buscar...\",\n      onChange: e => handleIn(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      onClick: e => handleSub(e),\n      children: \" Buscar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchBar, \"JZ026ztzghhswIdbIVxziEHmjuc=\", false, function () {\n  return [useDispatch];\n});\n\n_c = SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["C:/Users/andre/Desktop/DOG-PI/PI-Dogs/PI-Dogs-main/client/src/components/SearchBar.jsx"],"names":["React","useState","useDispatch","getDogByName","SearchBar","dispatch","name","setName","handleIn","e","preventDefault","target","value","handleSub"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,YAAT,QAA6B,YAA7B;;AAGA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAClC,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC,CAFkC,CAEI;;AAEtC,WAASO,QAAT,CAAkBC,CAAlB,EAAqB;AACnBA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,OAAO,CAACE,CAAC,CAACE,MAAF,CAASC,KAAV,CAAP,CAFmB,CAEM;;AACzB;AACD;;AAED,WAASC,SAAT,CAAmBJ,CAAnB,EAAsB;AACpBA,IAAAA,CAAC,CAACC,cAAF;AACAL,IAAAA,QAAQ,CAACF,YAAY,CAACG,IAAD,CAAb,CAAR,CAFoB,CAEU;;AAC9BC,IAAAA,OAAO,CAAC,EAAD,CAAP,CAHoB,CAGP;AACd;;AAED,sBACE;AAAA,4BACA;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAED,IAA1B;AAAgC,MAAA,WAAW,EAAC,WAA5C;AAAwD,MAAA,QAAQ,EAAGG,CAAD,IAAOD,QAAQ,CAACC,CAAD;AAAjF;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAGA,CAAD,IAAOI,SAAS,CAACJ,CAAD,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAtBuBL,S;UACLF,W;;;KADKE,S","sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getDogByName } from \"../actions\";\r\n\r\n\r\nexport default function SearchBar() {\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState(''); //lo que está tipeando el usuario va a ser mi estado local name\r\n\r\n  function handleIn(e) {\r\n    e.preventDefault();\r\n    setName(e.target.value); //el value del input que ingresa por búsqueda va a setear el value del state\r\n    /* console.log(name) */\r\n  }\r\n\r\n  function handleSub(e) {\r\n    e.preventDefault();\r\n    dispatch(getDogByName(name)); //acá lo que tipea el usuario le llega desde el estado local a la función que llama al back con ese name\r\n    setName(''); //para que cuando ya se hizo la busqueda no me siga mostrando el nombre ingresado, seteo el nombre en comillas\r\n  }\r\n\r\n  return (\r\n    <div>\r\n    <input type=\"text\" value={name} placeholder=\"Buscar...\" onChange={(e) => handleIn(e)} />\r\n    <button type=\"submit\" onClick={(e) => handleSub(e)} > Buscar</button>\r\n</div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}