{"ast":null,"code":"import axios from \"axios\";\nexport function getDogs() {\n  return async function (dispatch) {\n    var json = await axios.get(\"http://localhost:3001/dogs\"); //aca sucede toda la conexion entre el front y el back\n\n    return dispatch({\n      type: \"GET_DOGS\",\n      payload: json.data\n    });\n  };\n}\nexport function dogDetail(id) {\n  return async function (dispatch) {\n    var json = await axios.get(`http://localhost:3001/dogs/${id}`); //aca sucede toda la conexion entre el front y el back\n\n    return dispatch({\n      type: \"DOG_DETAIL\",\n      payload: json.data\n    });\n  };\n}\nexport function getDogsByName(name) {\n  //acá traigo del back-end los perros que coincidan con el nombre pasado por query\n  return async function (dispatch) {\n    var json = await axios.get(`http://localhost:3001/dogs?name=${name}`); //mi ruta del back mas lo que el usuario le pase como nombre en la barra de búsqueda\n\n    return dispatch({\n      type: \"GET_DOGS_NAME\",\n      payload: json.data\n    });\n  };\n}\nexport function getTemperaments() {\n  return async function (dispatch) {\n    var json = await axios.get(\"http://localhost:3001/temperament\");\n    return dispatch({\n      type: \"GET_TEMPERAMENTS\",\n      payload: json.data\n    });\n  };\n}\nexport function postDog(payload) {\n  //esto me va a devolver la información de los dogs que se agregan por post\n  return async function (dispatch) {\n    var json = await axios.post(\"http://localhost:3001/dog\", payload); // uso axios.post para disparar la accion de crear un god\n\n    /* console.log(json)*/\n    //en esta ruta quiero hacer el post del payload (lo que llega en el front)\n\n    return dispatch({\n      type: \"POST_DOG\",\n      payload: json.data\n    });\n  };\n}\nexport function filterDogsCreated(payload) {\n  //si son creados o son de la api\n  console.log(payload);\n  return {\n    type: \"FILTER_DOGS_CREATED\",\n    payload\n  };\n}\nexport function filterDogTemp(payload) {\n  //lo que llega en payload es lo que le mando desde el componente, el value del select\n  return {\n    type: \"FILTER_BY_TEMP\",\n    payload\n  };\n}\nexport function orderbyName(payload) {\n  return {\n    type: \"ORDER_BY_NAME\",\n    payload\n  };\n}\nexport function orderbyWeight(payload) {\n  return {\n    type: \"ORDER_BY_WEIGHT\",\n    payload\n  };\n}","map":{"version":3,"sources":["C:/Users/andre/Desktop/DOG-PI/PI-Dogs/PI-Dogs-main/client/src/actions/index.js"],"names":["axios","getDogs","dispatch","json","get","type","payload","data","dogDetail","id","getDogsByName","name","getTemperaments","postDog","post","filterDogsCreated","console","log","filterDogTemp","orderbyName","orderbyWeight"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,SAASC,OAAT,GAAmB;AACxB,SAAO,gBAAgBC,QAAhB,EAA0B;AAC/B,QAAIC,IAAI,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAU,4BAAV,CAAjB,CAD+B,CAC2B;;AAC1D,WAAOF,QAAQ,CAAC;AACdG,MAAAA,IAAI,EAAE,UADQ;AAEdC,MAAAA,OAAO,EAAEH,IAAI,CAACI;AAFA,KAAD,CAAf;AAID,GAND;AAOD;AAED,OAAO,SAASC,SAAT,CAAmBC,EAAnB,EAAuB;AAC5B,SAAO,gBAAgBP,QAAhB,EAA0B;AAC/B,QAAIC,IAAI,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAW,8BAA6BK,EAAG,EAA3C,CAAjB,CAD+B,CACiC;;AAChE,WAAOP,QAAQ,CAAC;AACdG,MAAAA,IAAI,EAAE,YADQ;AAEdC,MAAAA,OAAO,EAAEH,IAAI,CAACI;AAFA,KAAD,CAAf;AAID,GAND;AAOD;AAED,OAAO,SAASG,aAAT,CAAuBC,IAAvB,EAA6B;AAClC;AACA,SAAO,gBAAgBT,QAAhB,EAA0B;AAC/B,QAAIC,IAAI,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAW,mCAAkCO,IAAK,EAAlD,CAAjB,CAD+B,CACwC;;AACvE,WAAOT,QAAQ,CAAC;AACdG,MAAAA,IAAI,EAAE,eADQ;AAEdC,MAAAA,OAAO,EAAEH,IAAI,CAACI;AAFA,KAAD,CAAf;AAID,GAND;AAOD;AAED,OAAO,SAASK,eAAT,GAA2B;AAChC,SAAO,gBAAgBV,QAAhB,EAA0B;AAC/B,QAAIC,IAAI,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAU,mCAAV,CAAjB;AACA,WAAOF,QAAQ,CAAC;AACdG,MAAAA,IAAI,EAAE,kBADQ;AAEdC,MAAAA,OAAO,EAAEH,IAAI,CAACI;AAFA,KAAD,CAAf;AAID,GAND;AAOD;AAED,OAAO,SAASM,OAAT,CAAiBP,OAAjB,EAA0B;AAC/B;AACA,SAAO,gBAAgBJ,QAAhB,EAA0B;AAC/B,QAAIC,IAAI,GAAG,MAAMH,KAAK,CAACc,IAAN,CAAW,2BAAX,EAAwCR,OAAxC,CAAjB,CAD+B,CACoC;;AACnE;AAAuB;;AACvB,WAAOJ,QAAQ,CAAC;AACdG,MAAAA,IAAI,EAAE,UADQ;AAEdC,MAAAA,OAAO,EAAEH,IAAI,CAACI;AAFA,KAAD,CAAf;AAID,GAPD;AAQD;AAED,OAAO,SAASQ,iBAAT,CAA2BT,OAA3B,EAAoC;AACzC;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAYX,OAAZ;AACA,SAAO;AACLD,IAAAA,IAAI,EAAE,qBADD;AAELC,IAAAA;AAFK,GAAP;AAID;AAED,OAAO,SAASY,aAAT,CAAuBZ,OAAvB,EAAgC;AACrC;AAEA,SAAO;AACLD,IAAAA,IAAI,EAAE,gBADD;AAELC,IAAAA;AAFK,GAAP;AAID;AAED,OAAO,SAASa,WAAT,CAAqBb,OAArB,EAA8B;AACnC,SAAO;AACLD,IAAAA,IAAI,EAAE,eADD;AAELC,IAAAA;AAFK,GAAP;AAID;AAED,OAAO,SAASc,aAAT,CAAuBd,OAAvB,EAAgC;AACrC,SAAO;AACLD,IAAAA,IAAI,EAAE,iBADD;AAELC,IAAAA;AAFK,GAAP;AAID","sourcesContent":["import axios from \"axios\";\r\n\r\nexport function getDogs() {\r\n  return async function (dispatch) {\r\n    var json = await axios.get(\"http://localhost:3001/dogs\"); //aca sucede toda la conexion entre el front y el back\r\n    return dispatch({\r\n      type: \"GET_DOGS\",\r\n      payload: json.data,\r\n    });\r\n  };\r\n}\r\n\r\nexport function dogDetail(id) {\r\n  return async function (dispatch) {\r\n    var json = await axios.get(`http://localhost:3001/dogs/${id}`); //aca sucede toda la conexion entre el front y el back\r\n    return dispatch({\r\n      type: \"DOG_DETAIL\",\r\n      payload: json.data,\r\n    });\r\n  };\r\n}\r\n\r\nexport function getDogsByName(name) {\r\n  //acá traigo del back-end los perros que coincidan con el nombre pasado por query\r\n  return async function (dispatch) {\r\n    var json = await axios.get(`http://localhost:3001/dogs?name=${name}`); //mi ruta del back mas lo que el usuario le pase como nombre en la barra de búsqueda\r\n    return dispatch({\r\n      type: \"GET_DOGS_NAME\",\r\n      payload: json.data,\r\n    });\r\n  };\r\n}\r\n\r\nexport function getTemperaments() {\r\n  return async function (dispatch) {\r\n    var json = await axios.get(\"http://localhost:3001/temperament\");\r\n    return dispatch({\r\n      type: \"GET_TEMPERAMENTS\",\r\n      payload: json.data,\r\n    });\r\n  };\r\n}\r\n\r\nexport function postDog(payload) {\r\n  //esto me va a devolver la información de los dogs que se agregan por post\r\n  return async function (dispatch) {\r\n    var json = await axios.post(\"http://localhost:3001/dog\", payload); // uso axios.post para disparar la accion de crear un god\r\n    /* console.log(json)*/ //en esta ruta quiero hacer el post del payload (lo que llega en el front)\r\n    return dispatch({\r\n      type: \"POST_DOG\",\r\n      payload: json.data,\r\n    });\r\n  };\r\n}\r\n\r\nexport function filterDogsCreated(payload) {\r\n  //si son creados o son de la api\r\n  console.log(payload);\r\n  return {\r\n    type: \"FILTER_DOGS_CREATED\",\r\n    payload,\r\n  };\r\n}\r\n\r\nexport function filterDogTemp(payload) {\r\n  //lo que llega en payload es lo que le mando desde el componente, el value del select\r\n  \r\n  return {\r\n    type: \"FILTER_BY_TEMP\",\r\n    payload,\r\n  };\r\n}\r\n\r\nexport function orderbyName(payload) {\r\n  return {\r\n    type: \"ORDER_BY_NAME\",\r\n    payload,\r\n  };\r\n}\r\n\r\nexport function orderbyWeight(payload) {\r\n  return {\r\n    type: \"ORDER_BY_WEIGHT\",\r\n    payload,\r\n  };\r\n}"]},"metadata":{},"sourceType":"module"}