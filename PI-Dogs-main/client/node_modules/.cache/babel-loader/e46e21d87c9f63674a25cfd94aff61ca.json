{"ast":null,"code":"import axios from \"axios\";\nexport function getDogs() {\n  return async function (dispatch) {\n    var json = await axios.get(\"http://localhost:3001/dogs\"); //aca sucede toda la conexion entre el front y el back\n\n    return dispatch({\n      type: \"GET_DOGS\",\n      payload: json.data\n    });\n  };\n}\nexport function dogDetail(id) {\n  return async function (dispatch) {\n    var json = await axios.get(`http://localhost:3001/dogs/${id}`); //aca sucede toda la conexion entre el front y el back\n\n    return dispatch({\n      type: \"DOG_DETAIL\",\n      payload: json.data\n    });\n  };\n}\nexport function getDogByName(name) {\n  //acá traigo del back-end los perros que coincidan con el nombre pasado por query\n  return async function (dispatch) {\n    try {\n      await axios.get(\"http://localhost:3001/dogs/?name=\" + search).then(dogs => {\n        dispatch({\n          type: SEARCH_DOGS,\n          payload: dogs.data\n        });\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n} //   return async function (dispatch) {\n//     var json = await axios.get(`http://localhost:3001/dogs?name=${name}`); //mi ruta del back mas lo que el usuario le pase como nombre en la barra de búsqueda\n//     return dispatch({\n//       type: \"GET_DOGS_NAME\",\n//       payload: json.data,\n//     });\n//   };\n// }\n\nexport function getTemperaments() {\n  return async function (dispatch) {\n    var json = await axios.get(\"http://localhost:3001/temperament\");\n    return dispatch({\n      type: \"GET_TEMPERAMENTS\",\n      payload: json.data\n    });\n  };\n}\nexport function postDog(payload) {\n  //esto me va a devolver la información de los dogs que se agregan por post\n  return async function (dispatch) {\n    var json = await axios.post(\"http://localhost:3001/dog\", payload); // uso axios.post para disparar la accion de crear un god\n\n    /* console.log(json)*/\n    //en esta ruta quiero hacer el post del payload (lo que llega en el front)\n\n    return dispatch({\n      type: \"POST_DOG\",\n      payload: json.data\n    });\n  };\n}\nexport function filterDogsCreated(payload) {\n  //si son creados o son de la api\n  console.log(payload);\n  return {\n    type: \"FILTER_DOGS_CREATED\",\n    payload\n  };\n}\nexport function filterDogTemp(payload) {\n  //lo que llega en payload es lo que le mando desde el componente, el value del select\n  return {\n    type: \"FILTER_BY_TEMP\",\n    payload\n  };\n}\nexport function orderbyName(payload) {\n  return {\n    type: \"ORDER_BY_NAME\",\n    payload\n  };\n}\nexport function orderbyWeight(payload) {\n  return {\n    type: \"ORDER_BY_WEIGHT\",\n    payload\n  };\n}","map":{"version":3,"sources":["C:/Users/andre/Desktop/DOG-PI/PI-Dogs/PI-Dogs-main/client/src/actions/index.js"],"names":["axios","getDogs","dispatch","json","get","type","payload","data","dogDetail","id","getDogByName","name","search","then","dogs","SEARCH_DOGS","error","console","log","getTemperaments","postDog","post","filterDogsCreated","filterDogTemp","orderbyName","orderbyWeight"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,SAASC,OAAT,GAAmB;AACxB,SAAO,gBAAgBC,QAAhB,EAA0B;AAC/B,QAAIC,IAAI,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAU,4BAAV,CAAjB,CAD+B,CAC2B;;AAC1D,WAAOF,QAAQ,CAAC;AACdG,MAAAA,IAAI,EAAE,UADQ;AAEdC,MAAAA,OAAO,EAAEH,IAAI,CAACI;AAFA,KAAD,CAAf;AAID,GAND;AAOD;AAED,OAAO,SAASC,SAAT,CAAmBC,EAAnB,EAAuB;AAC5B,SAAO,gBAAgBP,QAAhB,EAA0B;AAC/B,QAAIC,IAAI,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAW,8BAA6BK,EAAG,EAA3C,CAAjB,CAD+B,CACiC;;AAChE,WAAOP,QAAQ,CAAC;AACdG,MAAAA,IAAI,EAAE,YADQ;AAEdC,MAAAA,OAAO,EAAEH,IAAI,CAACI;AAFA,KAAD,CAAf;AAID,GAND;AAOD;AAED,OAAO,SAASG,YAAT,CAAsBC,IAAtB,EAA4B;AACjC;AACA,SAAO,gBAAgBT,QAAhB,EAA0B;AAC/B,QAAI;AACF,YAAMF,KAAK,CACRI,GADG,CACC,sCAAsCQ,MADvC,EAEHC,IAFG,CAEGC,IAAD,IAAU;AACdZ,QAAAA,QAAQ,CAAC;AACPG,UAAAA,IAAI,EAAEU,WADC;AAEPT,UAAAA,OAAO,EAAEQ,IAAI,CAACP;AAFP,SAAD,CAAR;AAID,OAPG,CAAN;AAQD,KATD,CASE,OAAOS,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,GAbD;AAcD,C,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASG,eAAT,GAA2B;AAChC,SAAO,gBAAgBjB,QAAhB,EAA0B;AAC/B,QAAIC,IAAI,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAU,mCAAV,CAAjB;AACA,WAAOF,QAAQ,CAAC;AACdG,MAAAA,IAAI,EAAE,kBADQ;AAEdC,MAAAA,OAAO,EAAEH,IAAI,CAACI;AAFA,KAAD,CAAf;AAID,GAND;AAOD;AAED,OAAO,SAASa,OAAT,CAAiBd,OAAjB,EAA0B;AAC/B;AACA,SAAO,gBAAgBJ,QAAhB,EAA0B;AAC/B,QAAIC,IAAI,GAAG,MAAMH,KAAK,CAACqB,IAAN,CAAW,2BAAX,EAAwCf,OAAxC,CAAjB,CAD+B,CACoC;;AACnE;AAAuB;;AACvB,WAAOJ,QAAQ,CAAC;AACdG,MAAAA,IAAI,EAAE,UADQ;AAEdC,MAAAA,OAAO,EAAEH,IAAI,CAACI;AAFA,KAAD,CAAf;AAID,GAPD;AAQD;AAED,OAAO,SAASe,iBAAT,CAA2BhB,OAA3B,EAAoC;AACzC;AACAW,EAAAA,OAAO,CAACC,GAAR,CAAYZ,OAAZ;AACA,SAAO;AACLD,IAAAA,IAAI,EAAE,qBADD;AAELC,IAAAA;AAFK,GAAP;AAID;AAED,OAAO,SAASiB,aAAT,CAAuBjB,OAAvB,EAAgC;AACrC;AACE,SAAO;AACPD,IAAAA,IAAI,EAAE,gBADC;AAEPC,IAAAA;AAFO,GAAP;AAIH;AAED,OAAO,SAASkB,WAAT,CAAqBlB,OAArB,EAA8B;AACnC,SAAO;AACLD,IAAAA,IAAI,EAAE,eADD;AAELC,IAAAA;AAFK,GAAP;AAID;AAED,OAAO,SAASmB,aAAT,CAAuBnB,OAAvB,EAAgC;AACrC,SAAO;AACLD,IAAAA,IAAI,EAAE,iBADD;AAELC,IAAAA;AAFK,GAAP;AAID","sourcesContent":["import axios from \"axios\";\r\n\r\nexport function getDogs() {\r\n  return async function (dispatch) {\r\n    var json = await axios.get(\"http://localhost:3001/dogs\"); //aca sucede toda la conexion entre el front y el back\r\n    return dispatch({\r\n      type: \"GET_DOGS\",\r\n      payload: json.data,\r\n    });\r\n  };\r\n}\r\n\r\nexport function dogDetail(id) {\r\n  return async function (dispatch) {\r\n    var json = await axios.get(`http://localhost:3001/dogs/${id}`); //aca sucede toda la conexion entre el front y el back\r\n    return dispatch({\r\n      type: \"DOG_DETAIL\",\r\n      payload: json.data,\r\n    });\r\n  };\r\n}\r\n\r\nexport function getDogByName(name) {\r\n  //acá traigo del back-end los perros que coincidan con el nombre pasado por query\r\n  return async function (dispatch) {\r\n    try {\r\n      await axios\r\n        .get(\"http://localhost:3001/dogs/?name=\" + search)\r\n        .then((dogs) => {\r\n          dispatch({\r\n            type: SEARCH_DOGS,\r\n            payload: dogs.data,\r\n          });\r\n        });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n}\r\n//   return async function (dispatch) {\r\n//     var json = await axios.get(`http://localhost:3001/dogs?name=${name}`); //mi ruta del back mas lo que el usuario le pase como nombre en la barra de búsqueda\r\n//     return dispatch({\r\n//       type: \"GET_DOGS_NAME\",\r\n//       payload: json.data,\r\n//     });\r\n//   };\r\n// }\r\n\r\nexport function getTemperaments() {\r\n  return async function (dispatch) {\r\n    var json = await axios.get(\"http://localhost:3001/temperament\");\r\n    return dispatch({\r\n      type: \"GET_TEMPERAMENTS\",\r\n      payload: json.data,\r\n    });\r\n  };\r\n}\r\n\r\nexport function postDog(payload) {\r\n  //esto me va a devolver la información de los dogs que se agregan por post\r\n  return async function (dispatch) {\r\n    var json = await axios.post(\"http://localhost:3001/dog\", payload); // uso axios.post para disparar la accion de crear un god\r\n    /* console.log(json)*/ //en esta ruta quiero hacer el post del payload (lo que llega en el front)\r\n    return dispatch({\r\n      type: \"POST_DOG\",\r\n      payload: json.data,\r\n    });\r\n  };\r\n}\r\n\r\nexport function filterDogsCreated(payload) {\r\n  //si son creados o son de la api\r\n  console.log(payload);\r\n  return {\r\n    type: \"FILTER_DOGS_CREATED\",\r\n    payload,\r\n  };\r\n}\r\n\r\nexport function filterDogTemp(payload) {\r\n  //lo que llega en payload es lo que le mando desde el componente, el value del select\r\n    return {\r\n    type: \"FILTER_BY_TEMP\",\r\n    payload,\r\n  };\r\n}\r\n\r\nexport function orderbyName(payload) {\r\n  return {\r\n    type: \"ORDER_BY_NAME\",\r\n    payload,\r\n  };\r\n}\r\n\r\nexport function orderbyWeight(payload) {\r\n  return {\r\n    type: \"ORDER_BY_WEIGHT\",\r\n    payload,\r\n  };\r\n}"]},"metadata":{},"sourceType":"module"}